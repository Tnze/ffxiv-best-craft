//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "ItemAction")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "Type")]
    pub r#type: i32,
    #[sea_orm(column_name = "Data1")]
    pub data1: i32,
    #[sea_orm(column_name = "Data2")]
    pub data2: i32,
    #[sea_orm(column_name = "Data3")]
    pub data3: i32,
    #[sea_orm(column_name = "Data4")]
    pub data4: i32,
    #[sea_orm(column_name = "Data5")]
    pub data5: i32,
    #[sea_orm(column_name = "Data6")]
    pub data6: i32,
    #[sea_orm(column_name = "Data7")]
    pub data7: i32,
    #[sea_orm(column_name = "Data8")]
    pub data8: i32,
    #[sea_orm(column_name = "DataHQ1")]
    pub data_hq1: i32,
    #[sea_orm(column_name = "DataHQ2")]
    pub data_hq2: i32,
    #[sea_orm(column_name = "DataHQ3")]
    pub data_hq3: i32,
    #[sea_orm(column_name = "DataHQ4")]
    pub data_hq4: i32,
    #[sea_orm(column_name = "DataHQ5")]
    pub data_hq5: i32,
    #[sea_orm(column_name = "DataHQ6")]
    pub data_hq6: i32,
    #[sea_orm(column_name = "DataHQ7")]
    pub data_hq7: i32,
    #[sea_orm(column_name = "DataHQ8")]
    pub data_hq8: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::items::Entity")]
    Items,
}

impl Related<super::items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Items.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
